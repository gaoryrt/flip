{"version":3,"sources":["node_modules\\gelerator\\src\\gelerator.min.js","flip.js"],"names":["require","g","maxLenNum","aNum","bNum","toString","length","num2PadNumArr","num","len","padLeftStr","str2NumArr","rawStr","lenNum","split","map","Number","reverse","module","exports","node","from","to","duration","delay","easeFn","pos","Math","pow","systemArr","Array","keys","direct","beforeArr","afterArr","ctnrArr","_initHTML","undefined","setTimeout","flipTo","digits","classList","add","style","position","overflow","forEach","ctnr","i","display","unshift","appendChild","push","height","clientHeight","d","_draw","per","alter","digit","translateY","webkitTransform","transform","draw","temp","fn","start","performance","now","dur","tick","elapsed","requestAnimationFrame"],"mappings":"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","file":"number-flip.min.map","sourceRoot":"..","sourcesContent":["!function(t,n){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=n();else if(\"function\"==typeof define&&define.amd)define([],n);else{var e=n();for(var r in e)(\"object\"==typeof exports?exports:t)[r]=e[r]}}(window,function(){return function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.r=function(t){Object.defineProperty(t,\"__esModule\",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p=\"/\",e(e.s=4)}([function(t,n){var e=\"[object String]\",r=Object.prototype.toString,o=Array.isArray;t.exports=function(t){return\"string\"==typeof t||!o(t)&&function(t){return!!t&&\"object\"==typeof t}(t)&&r.call(t)==e}},function(t,n){t.exports=function(t){var n=typeof t;return!!t&&(\"object\"==n||\"function\"==n)}},function(t,n){var e=\"[object Object]\";var r,o,c=Function.prototype,u=Object.prototype,i=c.toString,f=u.hasOwnProperty,a=i.call(Object),p=u.toString,s=(r=Object.getPrototypeOf,o=Object,function(t){return r(o(t))});function l(t){return!!t&&\"object\"==typeof t}t.exports=function(t){return!!t&&1===t.nodeType&&l(t)&&!function(t){if(!l(t)||p.call(t)!=e||function(t){var n=!1;if(null!=t&&\"function\"!=typeof t.toString)try{n=!!(t+\"\")}catch(t){}return n}(t))return!1;var n=s(t);if(null===n)return!0;var r=f.call(n,\"constructor\")&&n.constructor;return\"function\"==typeof r&&r instanceof r&&i.call(r)==a}(t)}},function(t,n,e){\"use strict\";e.r(n),e.d(n,\"g\",function(){return a});var r=e(2),o=e.n(r),c=e(1),u=e.n(c),i=e(0),f=e.n(i),a=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"div\";return function(){var e=document.createElement(n),r=u()(t)?t:{class:t};Object.keys(r).forEach(function(t){/^_/.test(t)?(_data[r[t]]=void 0,_watcher.on(r[t],function(n){e[t.slice(1)]=n})):/^\\$/.test(t)?e.addEventListener(t.slice(1),function(n){r[t](_data,n)}):e.setAttribute(t,r[t])});for(var c=arguments.length,i=new Array(c),a=0;a<c;a++)i[a]=arguments[a];return i.forEach(function(t){o()(t)?e.appendChild(t):\"img\"===n.toLowerCase()&&f()(t)?e.setAttribute(\"src\",t):e.innerText=t}),e}}},function(t,n,e){t.exports=e(3)}])});","const { g } = require('gelerator')\r\n\r\nconst maxLenNum = (aNum, bNum) => (aNum > bNum ? aNum : bNum).toString().length\r\n\r\nconst num2PadNumArr = (num, len) => {\r\n  const padLeftStr = (rawStr, lenNum) => (rawStr.length < lenNum\r\n    ? padLeftStr('0' + rawStr, lenNum)\r\n    : rawStr)\r\n  const str2NumArr = rawStr => rawStr.split('').map(Number)\r\n  return str2NumArr(padLeftStr(num.toString(), len)).reverse()\r\n}\r\n\r\nmodule.exports = class flip {\r\n  constructor({\r\n    node,\r\n    from = 0,\r\n    to,\r\n    duration = .5,\r\n    delay,\r\n    easeFn = (pos => (pos /= .5) < 1\r\n                ? .5 * Math.pow(pos, 3)\r\n                : .5 * (Math.pow((pos - 2), 3) + 2)),\r\n    systemArr = [...Array(10).keys()],\r\n    direct = true\r\n  }) {\r\n    this.beforeArr = []\r\n    this.afterArr = []\r\n    this.ctnrArr = []\r\n    this.duration = duration * 1000\r\n    this.systemArr = systemArr\r\n    this.easeFn = easeFn\r\n    this.from = from\r\n    this.to = to || 0\r\n    this.node = node\r\n    this.direct = direct\r\n    this._initHTML(maxLenNum(this.from, this.to))\r\n    if (to === undefined) return\r\n    if (delay) setTimeout(() => this.flipTo({to: this.to, direct}), delay * 1000)\r\n    else this.flipTo({to: this.to, direct})\r\n  }\r\n\r\n  _initHTML(digits) {\r\n    this.node.classList.add('number-flip')\r\n    this.node.style.position = 'relative'\r\n    this.node.style.overflow = 'hidden'\r\n    ;[...Array(digits).keys()].forEach(i => {\r\n      const ctnr = g(`ctnr ctnr${i}`)(\r\n        ...this.systemArr.map(i => g('digit')(i)),\r\n        g('digit')(this.systemArr[0])\r\n      )\r\n      ctnr.style.position = 'relative'\r\n      ctnr.style.display = 'inline-block'\r\n      this.ctnrArr.unshift(ctnr)\r\n      this.node.appendChild(ctnr)\r\n      this.beforeArr.push(0)\r\n    })\r\n    this.height = this.ctnrArr[0].clientHeight / (this.systemArr.length + 1)\r\n    this.node.style.height = this.height + 'px'\r\n    for (let d = 0, len = this.ctnrArr.length; d < len; d += 1)\r\n      this._draw({\r\n        digit: d,\r\n        per: 1,\r\n        alter: ~~(this.from / Math.pow(10, d))\r\n      })\r\n  }\r\n\r\n  _draw({per, alter, digit}) {\r\n    const from = this.beforeArr[digit]\r\n    const modNum = ((per * alter + from) % 10 + 10) % 10\r\n    const translateY = `translateY(${- modNum * this.height}px)`\r\n    this.ctnrArr[digit].style.webkitTransform = translateY\r\n    this.ctnrArr[digit].style.transform = translateY\r\n  }\r\n\r\n  flipTo({\r\n    to,\r\n    duration,\r\n    easeFn,\r\n    direct = true\r\n  }) {\r\n    const len = this.ctnrArr.length\r\n    this.beforeArr = num2PadNumArr(this.from, len)\r\n    this.afterArr = num2PadNumArr(to, len)\r\n    const draw = per => {\r\n      let temp = 0\r\n      for (let d = this.ctnrArr.length - 1; d >= 0; d -= 1) {\r\n        let alter = this.afterArr[d] - this.beforeArr[d]\r\n        temp += alter\r\n        const fn = easeFn || this.easeFn\r\n        this._draw({\r\n          digit: d,\r\n          per: fn(per),\r\n          alter: direct ? alter : temp\r\n        })\r\n        temp *= 10\r\n      }\r\n    }\r\n    const start = performance.now()\r\n    const dur = (duration * 1000) || this.duration\r\n    const tick = now => {\r\n      let elapsed = now - start\r\n      draw(elapsed / dur)\r\n      if (elapsed < dur) requestAnimationFrame(tick)\r\n      else {\r\n        this.from = to\r\n        draw(1)\r\n      }\r\n    }\r\n    requestAnimationFrame(tick)\r\n  }\r\n}"]}